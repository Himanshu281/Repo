{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","htmlFor","Alert","style","height","alert","role","msg","TextForm","prop","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","toUpperCase","showAlert","toLowerCase","split","reverse","join","replace","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","filter","element","toFixed","About","mystyle","aria-labelledby","data-bs-parent","rel","href","defaultProps","App","SetMode","_useState3","_useState4","setAlert","message","setTimeout","about","body","react_router","path","exact","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2624ad08.chunk.js","sourcesContent":["// Skip to content\r\n\r\n   \r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n           <div style={{height:\"40px\"}}>\r\n        {props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n      \r\n        </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(prop) {\r\n  const handleUPClick = () => {\r\n    setText(text.toUpperCase());\r\n    prop.showAlert(\"Converted in UpperCase\", \"Success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleLOClick = () => {\r\n    setText(text.toLowerCase());\r\n    prop.showAlert(\"Converted in LowerCase\", \"Success\");\r\n  };\r\n\r\n  const clearText = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  const inversetext = () => {\r\n    setText(text.split(/\\s/).reverse().join(\" \"));\r\n    prop.showAlert(\"Text reversed\", \"Success\");\r\n  };\r\n  const removeSpace = () => {\r\n    setText(text.replace(/\\s+/g,' '));\r\n    prop.showAlert(\"Extra spaces removed\", \"Success\");\r\n  };\r\n\r\n  const copyText=()=>{\r\n      var text=document.getElementById(\"myBox\")\r\n      text.select();\r\n      text.setSelectionRange(0,99999);\r\n      navigator.clipboard.writeText(text.value);\r\n      prop.showAlert(\"Copied to clipboard\", \"Success\");\r\n  }\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: prop.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{prop.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"10\"\r\n            style={{\r\n              backgroundColor: prop.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: prop.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleUPClick}\r\n        >\r\n          Convert to UpperCase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={handleLOClick}\r\n        >\r\n          Convert to LowerCase\r\n        </button>\r\n        \r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={inversetext}\r\n        >\r\n          Reverse text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={removeSpace}\r\n        >\r\n          Remove extra space\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={copyText}\r\n        >\r\n          Copy text\r\n        </button>\r\n         \r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-2 my-1\"\r\n          onClick={clearText}\r\n        >\r\n          Clear Text\r\n        </button>\r\n\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: prop.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length - (text.split(\" \").length - 1)} characters\r\n        </p>\r\n        <p>\r\n          {(\r\n            0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          ).toFixed(3)}{\" \"}\r\n          Minutes read\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n// onChange event is used so that we can type in the textarea\r\n","import React from 'react'\r\nexport default function About(props) {\r\n\r\n\r\n    let mystyle = {\r\n        color: props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white', \r\n    }\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"container \" style={mystyle}>\r\n                <h1 className='my-3' >About us</h1>\r\n                <div className=\"accordion my-2\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={mystyle}>\r\n                                <strong>Text manipulator</strong>\r\n                                \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style={mystyle}>\r\n                            <div className=\"accordion-body\" >\r\n                                It is a free to use website, through which anyone can manipulate their texts according to the need.\r\n                                More functionalities will be added in future..\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={mystyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\" >\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={mystyle}>\r\n                                <strong>Developed by</strong>\r\n                                \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" >\r\n                            <div className=\"accordion-body\">\r\n                                Hi everyone I am Himanshu Dwivedi, I have made this Text manipulator as my first React mini project.\r\n                                I am currently working as a Software engineer in a US based MNC.\r\n                                You can connect with me on  <a target=\"_blank\" rel='noreferrer' href='https://www.linkedin.com/in/himanshu-dwivedi-b10899179'>linkedIn</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React from \"react\";\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, SetMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      SetMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    } else {\n      SetMode(\"dark\");\n      document.body.style.backgroundColor = \"#00144e\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n    setAlert({ msg: message, type: type });\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"Text Manipulator\"\n          about=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About mode={mode} />} />\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze/manipulate below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n  \n"],"sourceRoot":""}